#!/usr/bin/ruby

#   Copyright 2011 Red Hat, Inc.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

if ARGV.include?('-h') || ARGV.include?('--help')
  puts "Usage: #{$0} [OPTION]
Restart Aeolus services.

  -h, --help  display this help and exit

To show status of aeolus services please use aeolus-check-services.
"

  exit
end

# ordered as in rc.d
services = %w(mongod iwhd postgresql httpd deltacloud-core libvirtd aeolus-conductor conductor-delayed_job conductor-dbomatic imagefactory ntpd)

def perform(action, svcs)
  action = action.to_s
  svcs.map do |script|
    cmd = "service #{script} #{action}"
    puts "\n# #{cmd} ..."
    out = `#{cmd}`
    if $?.to_i == 0
      puts " \e[1;32mSuccess:\e[0m #{out.strip}"
    else
      puts " \e[1;31mFAILURE:\e[0m #{out.strip}"
    end
    $?.to_i
  end
end

perform :stop, services.reverse
perform :start, services

## Other checks

if perform(:status, ['mongod']) == [1]
  lockfile = '/var/lib/mongodb/mongod.lock'
  if File.exists?(lockfile)
    puts " \e[1;33mremoving\e[0m leftover #{lockfile}"
    File.delete(lockfile)
    perform :restart, %w(mongod iwhd)
  end
end

